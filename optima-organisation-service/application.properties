example.property=I AM THE DEFAULT

# JPA
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=create
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Hikari optimisations
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

# Actuator
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

# Keycloak
keycloak.realm = spmia-realm
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
keycloak.resource = optima
keycloak.credentials.secret = lpGZQgzrqamZetRLbfYV0ruZeEi8jfJD
keycloak.use-resource-role-mappings = true
keycloak.bearer-only = true

# Maps Spring Cloud Stream Source to a Kafka message broker and a message topic
spring.cloud.stream.bindings.output.destination=orgChangeTopic
spring.cloud.stream.bindings.output.content-type=application/json
# These properties provide the network location of Kafka and Zookeeper
spring.cloud.stream.kafka.binder.zkNodes=kafka
spring.cloud.stream.kafka.binder.brokers=kafka
